---

- hosts: localhost
  gather_facts: no

  vars_files:
      - "vars/secrets.yml"
      - "vars/vars.yml"

  tasks:
    - name: get my localhost public IP
      ipify_facts:
        timeout: 20
        api_url: "http://ifconfig.io/all.json"

    - name: Send magic Wake-On-Lan packet to turn on individual systems
      wakeonlan:
        mac: "{{ nas_mac_address }}"

    - name: Wait for system to become reachable
      wait_for_connection:
      delegate_to: nas

- hosts: raspberrypi
  become: yes
  gather_facts: no

  vars: 
    - install: True

  vars_files:
    - "vars/secrets.yml"
    - "vars/vars.yml"

  tasks:
    - name: installing, updating packages, and stopping services
      include_tasks: tasks/install.yml
      when: install == True

    - name: get my public IP
      ipify_facts:
      register: remote_external_ip

    - name: config and start openvpn
      include_tasks: tasks/openvpn.yml
      when: hostvars['localhost'].ipify_public_ip == hostvars['raspberrypi'].ipify_public_ip

    - name: Check public Ips are different
      fail:
      when: hostvars['localhost'].ipify_public_ip == hostvars['raspberrypi'].ipify_public_ip

    - name: Mount to nas drive
      mount:
        path: "{{ mount_point }}"
        src: "{{ mount_src }}"
        fstype: "{{ mount_type }}"
        opts: "{{ mount_opts }}"
        state: mounted

    - name: qbit system service config
      template:
        src: "{{ src_tmpl }}/qBittorrent_service.j2"
        dest: /etc/systemd/system/qbittorent.service
        backup: yes

    - name: qbit config dir in home dir
      file:
        path: /home/pi/.config/qBittorrent
        owner: pi
        group: pi
        state: directory

    - name: qbit config
      template:
        src: "{{ src_tmpl }}/qBittorrent.j2"
        dest: /home/pi/.config/qBittorrent/qBittorrent.conf
        owner: pi
        group: pi
        backup: yes

    - name: Start qbittorrent
      service:
        name: "qbittorrent"
        state: started
